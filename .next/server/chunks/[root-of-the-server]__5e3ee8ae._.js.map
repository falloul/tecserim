{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/fatimazahraAlloul/Desktop/tecserim/src/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport nodemailer from 'nodemailer';\n\nexport async function POST(request: Request) {\n  try {\n    const { name, email, message } = await request.json();\n\n    // Validate input\n    if (!name || !email || !message) {\n      return NextResponse.json(\n        { error: 'Name, email and message are required' },\n        { status: 400 }\n      );\n    }\n\n    // Create a transporter with Gmail\n    const transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASSWORD,\n      },\n    });\n\n    // Email content\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to: process.env.EMAIL_USER, // Sending to yourself\n      subject: `Contact form submission from ${name}`,\n      replyTo: email,\n      text: `\n        Name: ${name}\n        Email: ${email}\n        \n        Message:\n        ${message}\n      `,\n      html: `\n        <h3>New Contact Form Submission</h3>\n        <p><strong>Name:</strong> ${name}</p>\n        <p><strong>Email:</strong> ${email}</p>\n        <p><strong>Message:</strong></p>\n        <p>${message.replace(/\\n/g, '<br>')}</p>\n      `,\n    };\n\n    // Send email\n    await transporter.sendMail(mailOptions);\n\n    return NextResponse.json(\n      { message: 'Email sent successfully' },\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return NextResponse.json(\n      { error: 'Failed to send email' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEnD,iBAAiB;QACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,kCAAkC;QAClC,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,SAAS;YACT,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,UAAU;gBAC5B,MAAM,QAAQ,GAAG,CAAC,cAAc;YAClC;QACF;QAEA,gBAAgB;QAChB,MAAM,cAAc;YAClB,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,IAAI,QAAQ,GAAG,CAAC,UAAU;YAC1B,SAAS,CAAC,6BAA6B,EAAE,MAAM;YAC/C,SAAS;YACT,MAAM,CAAC;cACC,EAAE,KAAK;eACN,EAAE,MAAM;;;QAGf,EAAE,QAAQ;MACZ,CAAC;YACD,MAAM,CAAC;;kCAEqB,EAAE,KAAK;mCACN,EAAE,MAAM;;WAEhC,EAAE,QAAQ,OAAO,CAAC,OAAO,QAAQ;MACtC,CAAC;QACH;QAEA,aAAa;QACb,MAAM,YAAY,QAAQ,CAAC;QAE3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA0B,GACrC;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}